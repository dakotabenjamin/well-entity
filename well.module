<?php

/**
 * @file
 * Well entity
 */
 
/**
 * Implements hook_schema().
**/

function well_entity_info() {
  $return['well'] = array(
    'label' => t('Well'),
    'plural label' => t('Wells'),
    'module' => 'well'
    'description' => t('An entity type used to describe the watermonitor wells'),
    'controller class' => 'WellController',
    'views controller class' => 'WellViewsController',
    'base table' => 'well',
    'fieldable' => TRUE,
    'entity keys' => array(
      'id' => 'wid',
    ),

    'bundles' => array(
      'well' => array(
        'label' => 'well',
        'admin' => array(
          'path' => 'admin/structure/well/manage',
          'access arguments' => array('administer wells'),
        ),
      ),
    ),
    'view modes' => array(
      'full' => array(
        'label' => t('Default'),
        'custom settings' => FALSE,
      ),
    ),
    'uri callback' => 'entity_class_uri',
  );

  return $return;
}


/**
  * Implements hook_uri()
  */
function well_uri($well){
  return array(
    'path' => 'well/' . $well->id,
  );
}

/**
  * Implements hook_load()
  * This function and the following loads the well entity
  */
function well_load($wid = NULL, $reset = FALSE){
  $wids = (isset ($wid) ? array($wid) : array());
  $well = well_load_multiple($wids, $reset);
  return $well ? reset ($well) : FALSE;
}
 
function well_load_multiple($wids = array(), $conditions = array(), $reset = FALSE){
  return entity_load('well', $wids, $conditions, $reset);
}


/**
  * Implements hook_menu()
  *Here are a few ways to view the entities
  */
function well_menu(){
  $items['admin/structure/well/manage'] = array(
    'title' => 'Well Admin',
    'description' => 'Manage well structure',
    'page callback' => 'well_info',
    'access arguments' => array('administer wells'),
  );
  $items['well/%well'] = array(
    'title callback' => 'well_page_title',
    'title arguments' => array(1),
    'page callback' => 'well_page_view',
    'page arguments' => array(1),
    'access arguments' => array('view wells'),
    'type' => MENU_CALLBACK,
  );
  $items['well/add'] = array(
    'title' => 'Add Well',
    'page callback' => 'well_add',
    'access arguments' => array('create well'),
  );
  return $items;
}
/**
  * Implements hook_permission(). Gives permissions to administer and view wells
  */
function well_permission(){
    return array(
    'administer wells' =>  array(
      'title' => t('Administer wells'),
      'restrict access' => TRUE,
    ),
    'view wells' => array(
      'title' => t('View Wells'),
    )
  );
}
 
/**
  * Implements hook_info(). provides basic info. 
  */
function well_info() {
  return ('Welcome to the administration page for the Wells');
}
 
function well_page_title($well){
  return $well->wellname;
}
 
function well_page_view($well, $view_mode = 'full'){
  $well->content = array(); // $well->content is an array of each field of content in the well entity
 
  // Build fields content.
  field_attach_prepare_view('well', array($well->wid => $well), $view_mode);
  entity_prepare_view('well', array($well->wid => $well));
  $well->content += field_attach_view('well', $well, $view_mode);
 
  return $well->content;
}
 
 
function well_field_extra_fields() {
  $return = array();
  $return['well']['well'] = array(
    'form' => array(
      'wellname' => array(
        'label' => t('wellname'),
        'description' => t('Well Name'),
      ),
    ),
  );
 
  return $return;
}

/**
  * Implements hook_add(). adds a new well entity. 
  */

function well_add() {
  $well = (object) array (
    'wid' => '',
    'type' => 'well',
    'wellname' => '',
  );
  
  return drupal_get_form('well_add_form', $well);
}
 
 
function well_add_form($form, &$form_state, $well) {
  $form['wellname'] = array(
    '#type' => 'textfield',
    '#title' => t('wellname'),
    '#required' => TRUE,
  );
  
  field_attach_form('well', $well, $form, $form_state);

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
  );
  
  
  return $form;
}

function well_add_form_validate($form, &$form_state) {
  $well_submisttion = (object) $form_state['values'];
  field_attach_form_validate('well', $well_submisttion, $form, $form_state);
}
 
function well_add_form_submit($form, &$form_state) {
  $well_submission = (object) $form_state['values'];
  field_attach_submit('well', $well_submission, $form, $form_state);
  $well = well_save($well_submission);
  $form_state['redirect'] = "well/$well->wid";
}

function well_save(&$well) {
  return entity_get_controller('well')->save($well);
}

class WellController extends EntityAPIController {
  public function save($well) {
    drupal_write_record('well', $well);
    field_attach_insert('well', $well);
    module_invoke_all('entity_insert', 'well', $well);
    return $well;
  }
} 

/**
 * Well Views Controller class.
 */
class WellViewsController extends EntityDefaultViewsController {
  /**
   * Edit or add extra fields to views_data().
   */
  public function views_data() {
    $data = parent::views_data();
    // Add your custom data here
    /*
    * Example: change the handler of a field
    * if the 'created' field is a unix timestamp in the database,
    * Entity API will set the handler to views_handler_field_numeric,
    * change this to the views date handler
    */
    $data['well']['created']['field']['handler'] = 'views_handler_field_date';
    return $data;
  }
}